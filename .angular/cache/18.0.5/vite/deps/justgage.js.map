{
  "version": 3,
  "sources": ["../../../../../node_modules/justgage/justgage.js", "../../../../../node_modules/justgage/index.js"],
  "sourcesContent": ["/**\n * JustGage - Animated gauges using RaphaelJS\n * Check http://www.justgage.com for official releases\n * Licensed under MIT.\n * @author Bojan Djuricic (@Toorshia)\n **/\n\n(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"raphael\"], function (raphael) {\n      // AMD\n      return (root.JustGage = factory(raphael));\n    });\n  } else if (typeof module === \"object\" && module.exports) {\n    // Nodejs\n    module.exports = root.JustGage = factory(require(\"raphael\"));\n  } else {\n    // browser\n    // eslint-disable-next-line no-undef\n    root.JustGage = factory(Raphael);\n  }\n})(typeof window !== \"undefined\" ? window : this, function (Raphael) {\n  const JustGage = function (config) {\n    const obj = this;\n\n    obj.events = {};\n\n    // Helps in case developer wants to debug it. unobtrusive\n    if (isUndefined(config)) {\n      console.log(\"* justgage: Make sure to pass options to the constructor!\");\n      return false;\n    }\n\n    if (!isUndefined(config.id)) {\n      obj.node = document.getElementById(config.id);\n      if (!obj.node) {\n        console.log(\"* justgage: No element with id : %s found\", config.id);\n        return false;\n      }\n    } else if (!isUndefined(config.parentNode)) {\n      obj.node = config.parentNode;\n    } else {\n      console.log(\n        \"* justgage: Make sure to pass the existing element id or parentNode to the constructor.\"\n      );\n      return false;\n    }\n\n    const dataset = obj.node.dataset ? obj.node.dataset : {};\n\n    // check for defaults\n    const defaults = !isUndefined(config.defaults) ? config.defaults : false;\n    if (defaults !== false) {\n      config = extend({}, config, defaults);\n      delete config.defaults;\n    }\n\n    // configurable parameters\n    obj.config = {\n      // id : string\n      // this is container element id\n      id: config.id,\n\n      // classId : string\n      // this is the class id utilize when generating styles\n      classId: uuid(),\n\n      // value : float\n      // value gauge is showing\n      value: kvLookup(\"value\", config, dataset, 0, \"float\"),\n\n      // defaults : bool\n      // defaults parameter to use\n      defaults: kvLookup(\"defaults\", config, dataset, 0, false),\n\n      // parentNode : node object\n      // this is container element\n      parentNode: kvLookup(\"parentNode\", config, dataset, null),\n\n      // width : int\n      // gauge width\n      width: kvLookup(\"width\", config, dataset, null),\n\n      // height : int\n      // gauge height\n      height: kvLookup(\"height\", config, dataset, null),\n\n      // valueFontColor : string\n      // color of label showing current value\n      valueFontColor: kvLookup(\"valueFontColor\", config, dataset, \"#010101\"),\n\n      // valueFontFamily : string\n      // color of label showing current value\n      valueFontFamily: kvLookup(\"valueFontFamily\", config, dataset, \"Arial\"),\n\n      // symbol : string\n      // special symbol to show next to value\n      symbol: kvLookup(\"symbol\", config, dataset, \"\"),\n\n      // min : float\n      // min value\n      min: kvLookup(\"min\", config, dataset, 0, \"float\"),\n\n      // minTxt : string\n      // min value text\n      minTxt: kvLookup(\"minTxt\", config, dataset, false),\n\n      // max : float\n      // max value\n      max: kvLookup(\"max\", config, dataset, 100, \"float\"),\n\n      // maxTxt : string\n      // max value text\n      maxTxt: kvLookup(\"maxTxt\", config, dataset, false),\n\n      // reverse : bool\n      // reverse min and max\n      reverse: kvLookup(\"reverse\", config, dataset, false),\n\n      // humanFriendlyDecimal : int\n      // number of decimal places for our human friendly number to contain\n      humanFriendlyDecimal: kvLookup(\n        \"humanFriendlyDecimal\",\n        config,\n        dataset,\n        0\n      ),\n\n      // textRenderer: func\n      // function applied before rendering text\n      textRenderer: kvLookup(\"textRenderer\", config, dataset, null),\n\n      // onAnimationEnd: func\n      // function applied after animation is done\n      onAnimationEnd: kvLookup(\"onAnimationEnd\", config, dataset, null),\n\n      // gaugeWidthScale : float\n      // width of the gauge element\n      gaugeWidthScale: kvLookup(\"gaugeWidthScale\", config, dataset, 1.0),\n\n      // gaugeColor : string\n      // background color of gauge element\n      gaugeColor: kvLookup(\"gaugeColor\", config, dataset, \"#edebeb\"),\n\n      // label : string\n      // text to show below value\n      label: kvLookup(\"label\", config, dataset, \"\"),\n\n      // labelFontColor : string\n      // color of label showing label under value\n      labelFontColor: kvLookup(\"labelFontColor\", config, dataset, \"#b3b3b3\"),\n\n      // valueFontFamily : string\n      // font-family for label as well as min/max value\n      labelFontFamily: kvLookup(\"labelFontFamily\", config, dataset, \"Arial\"),\n\n      // shadowOpacity : int\n      // 0 ~ 1\n      shadowOpacity: kvLookup(\"shadowOpacity\", config, dataset, 0.2),\n\n      // shadowSize: int\n      // inner shadow size\n      shadowSize: kvLookup(\"shadowSize\", config, dataset, 5),\n\n      // shadowVerticalOffset : int\n      // how much shadow is offset from top\n      shadowVerticalOffset: kvLookup(\n        \"shadowVerticalOffset\",\n        config,\n        dataset,\n        3\n      ),\n\n      // levelColors : string[]\n      // colors of indicator, from lower to upper, in RGB format\n      levelColors: kvLookup(\n        \"levelColors\",\n        config,\n        dataset,\n        [\"#a9d70b\", \"#f9c802\", \"#ff0000\"],\n        \"array\",\n        \",\"\n      ),\n\n      // startAnimationTime : int\n      // length of initial animation\n      startAnimationTime: kvLookup(\"startAnimationTime\", config, dataset, 700),\n\n      // startAnimationType : string\n      // type of initial animation (linear, >, <,  <>, bounce)\n      startAnimationType: kvLookup(\"startAnimationType\", config, dataset, \">\"),\n\n      // refreshAnimationTime : int\n      // length of refresh animation\n      refreshAnimationTime: kvLookup(\n        \"refreshAnimationTime\",\n        config,\n        dataset,\n        700\n      ),\n\n      // refreshAnimationType : string\n      // type of refresh animation (linear, >, <,  <>, bounce)\n      refreshAnimationType: kvLookup(\n        \"refreshAnimationType\",\n        config,\n        dataset,\n        \">\"\n      ),\n\n      // donutStartAngle : int\n      // angle to start from when in donut mode\n      donutStartAngle: kvLookup(\"donutStartAngle\", config, dataset, 90),\n\n      // valueMinFontSize : int\n      // absolute minimum font size for the value\n      valueMinFontSize: kvLookup(\"valueMinFontSize\", config, dataset, 16),\n\n      // labelMinFontSize\n      // absolute minimum font size for the label\n      labelMinFontSize: kvLookup(\"labelMinFontSize\", config, dataset, 10),\n\n      // minLabelMinFontSize\n      // absolute minimum font size for the minimum label\n      minLabelMinFontSize: kvLookup(\"minLabelMinFontSize\", config, dataset, 10),\n\n      // maxLabelMinFontSize\n      // absolute minimum font size for the maximum label\n      maxLabelMinFontSize: kvLookup(\"maxLabelMinFontSize\", config, dataset, 10),\n\n      // hideValue : bool\n      // hide value text\n      hideValue: kvLookup(\"hideValue\", config, dataset, false),\n\n      // hideMinMax : bool\n      // hide min and max values\n      hideMinMax: kvLookup(\"hideMinMax\", config, dataset, false),\n\n      // showInnerShadow : bool\n      // show inner shadow\n      showInnerShadow: kvLookup(\"showInnerShadow\", config, dataset, false),\n\n      // humanFriendly : bool\n      // convert large numbers for min, max, value to human friendly (e.g. 1234567 -> 1.23M)\n      humanFriendly: kvLookup(\"humanFriendly\", config, dataset, false),\n\n      // noGradient : bool\n      // whether to use gradual color change for value, or sector-based\n      noGradient: kvLookup(\"noGradient\", config, dataset, false),\n\n      // donut : bool\n      // show full donut gauge\n      donut: kvLookup(\"donut\", config, dataset, false),\n\n      // differential : bool\n      // Gauge will fill starting from the center, rather than from the min value\n      differential: kvLookup(\"differential\", config, dataset, false),\n\n      // relativeGaugeSize : bool\n      // whether gauge size should follow changes in container element size\n      relativeGaugeSize: kvLookup(\"relativeGaugeSize\", config, dataset, false),\n\n      // counter : bool\n      // animate level number change\n      counter: kvLookup(\"counter\", config, dataset, false),\n\n      // decimals : int\n      // number of digits after floating point\n      decimals: kvLookup(\"decimals\", config, dataset, 0),\n\n      // customSectors : object\n      // custom sectors colors. Expects an object with props\n      // percents : bool hi/lo are percents values\n      // ranges : array of objects : {hi, lo, color}\n      customSectors: kvLookup(\"customSectors\", config, dataset, {}),\n\n      // formatNumber: boolean\n      // formats numbers with commas where appropriate\n      formatNumber: kvLookup(\"formatNumber\", config, dataset, false),\n\n      // pointer : bool\n      // show value pointer\n      pointer: kvLookup(\"pointer\", config, dataset, false),\n\n      // pointerOptions : object\n      // define pointer look\n      pointerOptions: kvLookup(\"pointerOptions\", config, dataset, {}),\n\n      // displayRemaining: boolean\n      // replace display number with the number remaining to reach max\n      displayRemaining: kvLookup(\"displayRemaining\", config, dataset, false),\n    };\n\n    // variables\n    let canvasW,\n      canvasH,\n      widgetW,\n      widgetH,\n      aspect,\n      dx,\n      dy,\n      valueFontSize,\n      valueX,\n      valueY,\n      labelFontSize,\n      labelX,\n      labelY,\n      minFontSize,\n      minX,\n      minY,\n      maxFontSize,\n      maxX,\n      maxY;\n\n    // overflow values\n    if (obj.config.value > obj.config.max) obj.config.value = obj.config.max;\n    if (obj.config.value < obj.config.min) obj.config.value = obj.config.min;\n    obj.originalValue = kvLookup(\"value\", config, dataset, -1, \"float\");\n\n    // create canvas\n    if (\n      obj.config.id !== null &&\n      document.getElementById(obj.config.id) !== null\n    ) {\n      obj.canvas = Raphael(obj.config.id, \"100%\", \"100%\");\n    } else if (obj.config.parentNode !== null) {\n      obj.canvas = Raphael(obj.config.parentNode, \"100%\", \"100%\");\n    }\n\n    // canvas dimensions\n    if (obj.config.relativeGaugeSize === true) {\n      if (obj.config.donut === true) {\n        obj.canvas.setViewBox(0, 0, 200, 200, true);\n        canvasW = 200;\n        canvasH = 200;\n      } else {\n        obj.canvas.setViewBox(0, 0, 200, 100, true);\n        canvasW = 200;\n        canvasH = 100;\n      }\n    } else if (obj.config.width !== null && obj.config.height !== null) {\n      canvasW = obj.config.width;\n      canvasH = obj.config.height;\n    } else if (obj.config.parentNode !== null) {\n      obj.canvas.setViewBox(0, 0, 200, 100, true);\n      canvasW = 200;\n      canvasH = 100;\n    } else {\n      canvasW =\n        getStyle(document.getElementById(obj.config.id), \"width\").slice(0, -2) *\n        1;\n      canvasH =\n        getStyle(document.getElementById(obj.config.id), \"height\").slice(\n          0,\n          -2\n        ) * 1;\n    }\n\n    // widget dimensions\n    if (obj.config.donut === true) {\n      if (canvasW > canvasH) {\n        // landscape\n        widgetH = canvasH;\n        widgetW = widgetH;\n        // width less than height\n      } else if (canvasW < canvasH) {\n        // portrait\n        widgetW = canvasW;\n        widgetH = widgetW;\n      } else {\n        // square\n        widgetW = canvasW;\n        widgetH = widgetW;\n      }\n\n      // delta\n      dx = (canvasW - widgetW) / 2;\n      dy = (canvasH - widgetH) / 2;\n\n      // value\n      valueFontSize = widgetH / 6.4 > 16 ? widgetH / 5.4 : 18;\n      valueX = dx + widgetW / 2;\n      if (obj.config.label !== \"\") {\n        valueY = dy + widgetH / 1.85;\n      } else {\n        valueY = dy + widgetH / 1.7;\n      }\n\n      // label\n      labelFontSize = widgetH / 16 > 10 ? widgetH / 16 : 10;\n      labelX = dx + widgetW / 2;\n      labelY = valueY + labelFontSize;\n\n      // min\n      minFontSize = widgetH / 16 > 10 ? widgetH / 16 : 10;\n      minX =\n        dx +\n        widgetW / 10 +\n        ((widgetW / 6.666666666666667) * obj.config.gaugeWidthScale) / 2;\n      minY = labelY;\n\n      // max\n      maxFontSize = widgetH / 16 > 10 ? widgetH / 16 : 10;\n      maxX =\n        dx +\n        widgetW -\n        widgetW / 10 -\n        ((widgetW / 6.666666666666667) * obj.config.gaugeWidthScale) / 2;\n      maxY = labelY;\n    } else {\n      if (canvasW > canvasH) {\n        // landscape\n        widgetH = canvasH;\n        widgetW = widgetH * 2;\n        if (widgetW > canvasW) {\n          // if width doesn't fit, rescale both\n          aspect = widgetW / canvasW;\n          widgetW = widgetW / aspect;\n          widgetH = widgetH / aspect;\n        }\n      } else if (canvasW < canvasH) {\n        // portrait\n        widgetW = canvasW;\n        widgetH = widgetW / 2;\n      } else {\n        // square\n        widgetW = canvasW;\n        widgetH = widgetW * 0.5;\n      }\n\n      // delta\n      dx = (canvasW - widgetW) / 2;\n      dy = (canvasH - widgetH) / 2;\n\n      // value\n      valueFontSize =\n        widgetH / 6.5 > obj.config.valueMinFontSize\n          ? widgetH / 6.5\n          : obj.config.valueMinFontSize;\n      valueX = dx + widgetW / 2;\n      valueY = dy + widgetH / 1.275;\n\n      // label\n      labelFontSize =\n        widgetH / 16 > obj.config.labelMinFontSize\n          ? widgetH / 16\n          : obj.config.labelMinFontSize;\n      labelX = dx + widgetW / 2;\n      labelY = valueY + valueFontSize / 2 + 5;\n\n      // min\n      minFontSize =\n        widgetH / 16 > obj.config.minLabelMinFontSize\n          ? widgetH / 16\n          : obj.config.minLabelMinFontSize;\n      minX =\n        dx +\n        widgetW / 10 +\n        ((widgetW / 6.666666666666667) * obj.config.gaugeWidthScale) / 2;\n      minY = labelY;\n\n      // max\n      maxFontSize =\n        widgetH / 16 > obj.config.maxLabelMinFontSize\n          ? widgetH / 16\n          : obj.config.maxLabelMinFontSize;\n      maxX =\n        dx +\n        widgetW -\n        widgetW / 10 -\n        ((widgetW / 6.666666666666667) * obj.config.gaugeWidthScale) / 2;\n      maxY = labelY;\n    }\n\n    // parameters\n    obj.params = {\n      canvasW,\n      canvasH,\n      widgetW,\n      widgetH,\n      dx,\n      dy,\n      valueFontSize,\n      valueX,\n      valueY,\n      labelFontSize,\n      labelX,\n      labelY,\n      minFontSize,\n      minX,\n      minY,\n      maxFontSize,\n      maxX,\n      maxY,\n    };\n\n    // var clear\n    // canvasW, canvasH, widgetW, widgetH, aspect, dx, dy, valueFontSize, valueX, valueY, labelFontSize, labelX, labelY, minFontSize, minX, minY, maxFontSize, maxX, maxY = null\n\n    /**\n     * pki - custom attribute for generating gauge paths\n     *\n     * @param {Number} value display value\n     * @returns SVG path string for gauge level\n     */\n    obj.canvas.customAttributes.pki = function (value, isDiff) {\n      let min = obj.config.min;\n      let max = obj.config.max;\n      const w = obj.params.widgetW;\n      const h = obj.params.widgetH;\n      const dx = obj.params.dx;\n      const dy = obj.params.dy;\n      const gws = obj.config.gaugeWidthScale;\n      const donut = obj.config.donut;\n\n      let alpha; // angle in radians\n      let Ro; // outer radius, from center to outer edge of gauge\n      let Ri; // inner radius, from center to inner edge of gauge\n      let Cx; // center x\n      let Cy; // center y\n      let So; // sweep flag for outer arc\n      let Si; // sweep flag for inner arc\n      let Xo; // outer x, from center to outer edge of arc\n      let Yo; // outer y, from center to outer edge of arc\n      let Xi; // inner x, from center to inner edge of arc\n      let Yi; // inner y, from center to inner edge of arc\n      let path; // SVG path string\n\n      if (min < 0 && !isDiff) {\n        max -= min;\n        value -= min;\n        min = 0;\n      }\n\n      if (donut) {\n        alpha = (1 - (2 * (value - min)) / (max - min)) * Math.PI;\n        Ro = w / 2 - w / 30;\n        Ri = Ro - (w / 6.666666666666667) * gws;\n\n        Cx = w / 2 + dx;\n        Cy = h / 2 + dy;\n\n        Xo = Cx + Ro * Math.cos(alpha);\n        Yo = Cy - Ro * Math.sin(alpha);\n        Xi = Cx + Ri * Math.cos(alpha);\n        Yi = Cy - Ri * Math.sin(alpha);\n\n        path = \"M\" + (Cx - Ri) + \",\" + Cy + \" \";\n        path += \"L\" + (Cx - Ro) + \",\" + Cy + \" \";\n        if (value - min > (max - min) / 2) {\n          path += \"A\" + Ro + \",\" + Ro + \" 0 0 1 \" + (Cx + Ro) + \",\" + Cy + \" \";\n        }\n        path += \"A\" + Ro + \",\" + Ro + \" 0 0 1 \" + Xo + \",\" + Yo + \" \";\n        path += \"L\" + Xi + \",\" + Yi + \" \";\n        if (value - min > (max - min) / 2) {\n          path += \"A\" + Ri + \",\" + Ri + \" 0 0 0 \" + (Cx + Ri) + \",\" + Cy + \" \";\n        }\n        path += \"A\" + Ri + \",\" + Ri + \" 0 0 0 \" + (Cx - Ri) + \",\" + Cy + \" \";\n        path += \"Z \";\n\n        return {\n          path,\n        };\n      } else if (isDiff) {\n        alpha = (1 - (value - min) / (max - min)) * Math.PI;\n        Ro = w / 2 - w / 10;\n        Ri = Ro - (w / 6.666666666666667) * gws;\n\n        Cx = w / 2 + dx;\n        Cy = h / 1.25 + dy;\n\n        Xo = Cx + Ro * Math.cos(alpha);\n        Yo = Cy - Ro * Math.sin(alpha);\n        Xi = Cx + Ri * Math.cos(alpha);\n        Yi = Cy - Ri * Math.sin(alpha);\n\n        const middle = min + (max - min) / 2;\n\n        // sweep flag determines if the arc should begin moving at positive angles\n        // or negative ones\n        So = value < middle ? 1 : 0; // sweep flag for outer arc\n        Si = value < middle ? 0 : 1; // sweep flag for inner arc\n\n        path = \"M\" + Cx + \",\" + (Cy - Ri) + \" \"; // start at bottom center\n        path += \"L\" + Cx + \",\" + (Cy - Ro) + \" \"; // line to top center (Cx, Cy - Ro)\n        path += \"A\" + Ro + \",\" + Ro + \" 0 0 \" + Si + \" \" + Xo + \",\" + Yo + \" \"; // arc to outer edge\n        path += \"L\" + Xi + \",\" + Yi + \" \"; // line to inner edge (Xi, Yi)\n        path +=\n          \"A\" + Ri + \",\" + Ri + \" 0 0 \" + So + \" \" + Cx + \",\" + (Cy - Ri) + \" \"; // arc to bottom center\n        path += \"Z \"; // close path\n\n        return {\n          path,\n        };\n      } else {\n        alpha = (1 - (value - min) / (max - min)) * Math.PI;\n        Ro = w / 2 - w / 10;\n        Ri = Ro - (w / 6.666666666666667) * gws;\n\n        Cx = w / 2 + dx;\n        Cy = h / 1.25 + dy;\n\n        // Xo = w / 2 + dx + Ro * Math.cos(alpha);\n        // Yo = h - (h - Cy) - Ro * Math.sin(alpha);\n        // Xi = w / 2 + dx + Ri * Math.cos(alpha);\n        // Yi = h - (h - Cy) - Ri * Math.sin(alpha);\n\n        Xo = Cx + Ro * Math.cos(alpha);\n        Yo = Cy - Ro * Math.sin(alpha);\n        Xi = Cx + Ri * Math.cos(alpha);\n        Yi = Cy - Ri * Math.sin(alpha);\n\n        path = \"M\" + (Cx - Ri) + \",\" + Cy + \" \";\n        path += \"L\" + (Cx - Ro) + \",\" + Cy + \" \";\n        path += \"A\" + Ro + \",\" + Ro + \" 0 0 1 \" + Xo + \",\" + Yo + \" \";\n        path += \"L\" + Xi + \",\" + Yi + \" \";\n        path += \"A\" + Ri + \",\" + Ri + \" 0 0 0 \" + (Cx - Ri) + \",\" + Cy + \" \";\n        path += \"Z \";\n\n        return {\n          path,\n        };\n      }\n    };\n\n    /**\n     * ndl - custom attribute for generating pointer path\n     *\n     * @param {Number} value display value\n     * @returns SVG path string for gauge pointer\n     */\n    obj.canvas.customAttributes.ndl = function (value) {\n      const min = obj.config.min;\n      const max = obj.config.max;\n      const w = obj.params.widgetW;\n      const h = obj.params.widgetH;\n      const dx = obj.params.dx;\n      const dy = obj.params.dy;\n      const gws = obj.config.gaugeWidthScale;\n      const donut = obj.config.donut;\n\n      let dlt = (w * 3.5) / 100;\n      let dlb = w / 15;\n      let dw = w / 100;\n\n      if (\n        obj.config.pointerOptions.toplength != null &&\n        obj.config.pointerOptions.toplength !== undefined\n      )\n        dlt = obj.config.pointerOptions.toplength;\n      if (\n        obj.config.pointerOptions.bottomlength != null &&\n        obj.config.pointerOptions.bottomlength !== undefined\n      )\n        dlb = obj.config.pointerOptions.bottomlength;\n      if (\n        obj.config.pointerOptions.bottomwidth != null &&\n        obj.config.pointerOptions.bottomwidth !== undefined\n      )\n        dw = obj.config.pointerOptions.bottomwidth;\n\n      let alpha,\n        Ro,\n        Ri,\n        Cy,\n        Xo,\n        Yo,\n        Xi,\n        Yi,\n        Xc,\n        Yc,\n        Xz,\n        Yz,\n        Xa,\n        Ya,\n        Xb,\n        Yb,\n        path;\n\n      if (donut) {\n        alpha = (1 - (2 * (value - min)) / (max - min)) * Math.PI;\n        Ro = w / 2 - w / 30;\n        Ri = Ro - (w / 6.666666666666667) * gws;\n\n        // Cx = w / 2 + dx\n        Cy = h / 2 + dy;\n\n        Xo = w / 2 + dx + Ro * Math.cos(alpha);\n        Yo = h - (h - Cy) - Ro * Math.sin(alpha);\n        Xi = w / 2 + dx + Ri * Math.cos(alpha);\n        Yi = h - (h - Cy) - Ri * Math.sin(alpha);\n\n        Xc = Xo + dlt * Math.cos(alpha);\n        Yc = Yo - dlt * Math.sin(alpha);\n        Xz = Xi - dlb * Math.cos(alpha);\n        Yz = Yi + dlb * Math.sin(alpha);\n\n        Xa = Xz + dw * Math.sin(alpha);\n        Ya = Yz + dw * Math.cos(alpha);\n        Xb = Xz - dw * Math.sin(alpha);\n        Yb = Yz - dw * Math.cos(alpha);\n\n        path = \"M\" + Xa + \",\" + Ya + \" \";\n        path += \"L\" + Xb + \",\" + Yb + \" \";\n        path += \"L\" + Xc + \",\" + Yc + \" \";\n        path += \"Z \";\n\n        return {\n          path,\n        };\n      } else {\n        alpha = (1 - (value - min) / (max - min)) * Math.PI;\n        Ro = w / 2 - w / 10;\n        Ri = Ro - (w / 6.666666666666667) * gws;\n\n        // Cx = w / 2 + dx\n        Cy = h / 1.25 + dy;\n\n        Xo = w / 2 + dx + Ro * Math.cos(alpha);\n        Yo = h - (h - Cy) - Ro * Math.sin(alpha);\n        Xi = w / 2 + dx + Ri * Math.cos(alpha);\n        Yi = h - (h - Cy) - Ri * Math.sin(alpha);\n\n        Xc = Xo + dlt * Math.cos(alpha);\n        Yc = Yo - dlt * Math.sin(alpha);\n        Xz = Xi - dlb * Math.cos(alpha);\n        Yz = Yi + dlb * Math.sin(alpha);\n\n        Xa = Xz + dw * Math.sin(alpha);\n        Ya = Yz + dw * Math.cos(alpha);\n        Xb = Xz - dw * Math.sin(alpha);\n        Yb = Yz - dw * Math.cos(alpha);\n\n        path = \"M\" + Xa + \",\" + Ya + \" \";\n        path += \"L\" + Xb + \",\" + Yb + \" \";\n        path += \"L\" + Xc + \",\" + Yc + \" \";\n        path += \"Z \";\n\n        return {\n          path,\n        };\n      }\n    };\n\n    // gauge\n    obj.gauge = obj.canvas.path().attr({\n      stroke: \"none\",\n      fill: obj.config.gaugeColor,\n      pki: [obj.config.max],\n    });\n\n    // level\n    obj.level = obj.canvas.path().attr({\n      stroke: \"none\",\n      fill: getColor(\n        obj.config.value,\n        (obj.config.value - obj.config.min) / (obj.config.max - obj.config.min),\n        obj.config.levelColors,\n        obj.config.noGradient,\n        obj.config.customSectors\n      ),\n      pki: [\n        obj.config.differential ? 0 : obj.config.min,\n        obj.config.differential,\n      ],\n    });\n\n    if (obj.config.donut) {\n      obj.level.transform(\n        \"r\" +\n          obj.config.donutStartAngle +\n          \", \" +\n          (obj.params.widgetW / 2 + obj.params.dx) +\n          \", \" +\n          (obj.params.widgetH / 2 + obj.params.dy)\n      );\n    }\n\n    if (obj.config.pointer) {\n      // needle\n      obj.needle = obj.canvas.path().attr({\n        stroke: !isUndefined(obj.config.pointerOptions.stroke)\n          ? obj.config.pointerOptions.stroke\n          : \"none\",\n        \"stroke-width\": !isUndefined(obj.config.pointerOptions.stroke_width)\n          ? obj.config.pointerOptions.stroke_width\n          : 0,\n        \"stroke-linecap\": !isUndefined(obj.config.pointerOptions.stroke_linecap)\n          ? obj.config.pointerOptions.stroke_linecap\n          : \"square\",\n        fill: !isUndefined(obj.config.pointerOptions.color)\n          ? obj.config.pointerOptions.color\n          : \"#000000\",\n        ndl: [obj.config.min],\n      });\n\n      if (obj.config.donut) {\n        obj.needle.transform(\n          \"r\" +\n            obj.config.donutStartAngle +\n            \", \" +\n            (obj.params.widgetW / 2 + obj.params.dx) +\n            \", \" +\n            (obj.params.widgetH / 2 + obj.params.dy)\n        );\n      }\n    }\n\n    // value\n    obj.txtValue = obj.canvas.text(obj.params.valueX, obj.params.valueY, 0);\n    obj.txtValue.attr({\n      \"font-size\": obj.params.valueFontSize,\n      \"font-weight\": \"bold\",\n      \"font-family\": obj.config.valueFontFamily,\n      fill: obj.config.valueFontColor,\n      \"fill-opacity\": \"0\",\n    });\n    setDy(obj.txtValue, obj.params.valueFontSize, obj.params.valueY);\n\n    // label\n    obj.txtLabel = obj.canvas.text(\n      obj.params.labelX,\n      obj.params.labelY,\n      obj.config.label\n    );\n    obj.txtLabel.attr({\n      \"font-size\": obj.params.labelFontSize,\n      \"font-weight\": \"normal\",\n      \"font-family\": obj.config.labelFontFamily,\n      fill: obj.config.labelFontColor,\n      \"fill-opacity\": \"0\",\n    });\n    setDy(obj.txtLabel, obj.params.labelFontSize, obj.params.labelY);\n\n    // min\n    let min = obj.config.min;\n    if (obj.config.reverse) {\n      min = obj.config.max;\n    }\n\n    obj.txtMinimum = min;\n    if (obj.config.minTxt) {\n      obj.txtMinimum = obj.config.minTxt;\n    } else if (obj.config.humanFriendly) {\n      obj.txtMinimum = humanFriendlyNumber(\n        min,\n        obj.config.humanFriendlyDecimal\n      );\n    } else if (obj.config.formatNumber) {\n      obj.txtMinimum = formatNumber(min);\n    }\n    obj.txtMin = obj.canvas.text(\n      obj.params.minX,\n      obj.params.minY,\n      obj.txtMinimum\n    );\n    obj.txtMin.attr({\n      \"font-size\": obj.params.minFontSize,\n      \"font-weight\": \"normal\",\n      \"font-family\": obj.config.labelFontFamily,\n      fill: obj.config.labelFontColor,\n      \"fill-opacity\": obj.config.hideMinMax || obj.config.donut ? \"0\" : \"1\",\n    });\n    setDy(obj.txtMin, obj.params.minFontSize, obj.params.minY);\n\n    // max\n    let max = obj.config.max;\n    if (obj.config.reverse) {\n      max = obj.config.min;\n    }\n    obj.txtMaximum = max;\n    if (obj.config.maxTxt) {\n      obj.txtMaximum = obj.config.maxTxt;\n    } else if (obj.config.humanFriendly) {\n      obj.txtMaximum = humanFriendlyNumber(\n        max,\n        obj.config.humanFriendlyDecimal\n      );\n    } else if (obj.config.formatNumber) {\n      obj.txtMaximum = formatNumber(max);\n    }\n    obj.txtMax = obj.canvas.text(\n      obj.params.maxX,\n      obj.params.maxY,\n      obj.txtMaximum\n    );\n    obj.txtMax.attr({\n      \"font-size\": obj.params.maxFontSize,\n      \"font-weight\": \"normal\",\n      \"font-family\": obj.config.labelFontFamily,\n      fill: obj.config.labelFontColor,\n      \"fill-opacity\": obj.config.hideMinMax || obj.config.donut ? \"0\" : \"1\",\n    });\n    setDy(obj.txtMax, obj.params.maxFontSize, obj.params.maxY);\n\n    const defs = obj.canvas.canvas.childNodes[1];\n    const svg = \"http://www.w3.org/2000/svg\";\n\n    if (ie !== undefined && ie < 9) {\n      // VML mode - no SVG & SVG filter support\n    } else if (ie !== undefined) {\n      onCreateElementNsReady(function () {\n        obj.generateShadow(svg, defs);\n      });\n    } else {\n      obj.generateShadow(svg, defs);\n    }\n\n    // set value to display\n    if (\n      obj.config.textRenderer &&\n      obj.config.textRenderer(obj.originalValue) !== false\n    ) {\n      obj.originalValue = obj.config.textRenderer(obj.originalValue);\n    } else if (obj.config.humanFriendly) {\n      obj.originalValue =\n        humanFriendlyNumber(\n          obj.originalValue,\n          obj.config.humanFriendlyDecimal\n        ) + obj.config.symbol;\n    } else if (obj.config.formatNumber) {\n      obj.originalValue = formatNumber(obj.originalValue) + obj.config.symbol;\n    } else if (obj.config.displayRemaining) {\n      obj.originalValue =\n        ((obj.config.max - obj.originalValue) * 1).toFixed(\n          obj.config.decimals\n        ) + obj.config.symbol;\n    } else {\n      obj.originalValue =\n        (obj.originalValue * 1).toFixed(obj.config.decimals) +\n        obj.config.symbol;\n    }\n\n    if (obj.config.counter === true) {\n      // on each animation frame\n      const onFrame = function () {\n        let currentValue = obj.level.attr(\"pki\")[0];\n        if (obj.config.reverse) {\n          currentValue =\n            obj.config.max * 1 +\n            obj.config.min * 1 -\n            obj.level.attr(\"pki\")[0] * 1;\n        }\n        if (\n          obj.config.textRenderer &&\n          obj.config.textRenderer(Math.floor(currentValue)) !== false\n        ) {\n          obj.txtValue.attr(\n            \"text\",\n            obj.config.textRenderer(Math.floor(currentValue))\n          );\n        } else if (obj.config.humanFriendly) {\n          obj.txtValue.attr(\n            \"text\",\n            humanFriendlyNumber(\n              Math.floor(currentValue),\n              obj.config.humanFriendlyDecimal\n            ) + obj.config.symbol\n          );\n        } else if (obj.config.formatNumber) {\n          obj.txtValue.attr(\n            \"text\",\n            formatNumber(Math.floor(currentValue)) + obj.config.symbol\n          );\n        } else if (obj.config.displayRemaining) {\n          obj.txtValue.attr(\n            \"text\",\n            ((obj.config.max - currentValue) * 1).toFixed(obj.config.decimals) +\n              obj.config.symbol\n          );\n        } else {\n          obj.txtValue.attr(\n            \"text\",\n            (currentValue * 1).toFixed(obj.config.decimals) + obj.config.symbol\n          );\n        }\n        setDy(obj.txtValue, obj.params.valueFontSize, obj.params.valueY);\n        currentValue = null;\n      };\n\n      // on animation end\n      const onFinish = function () {\n        obj.txtValue.attr({\n          text: obj.originalValue,\n        });\n        setDy(obj.txtValue, obj.params.valueFontSize, obj.params.valueY);\n      };\n\n      this.bindEvent(\"raphael.anim.finish\", onFinish);\n      this.bindEvent(\"raphael.anim.frame\", onFrame);\n    } else {\n      // on animation start\n      const onStart = function () {\n        obj.txtValue.attr({\n          text: obj.originalValue,\n        });\n        setDy(obj.txtValue, obj.params.valueFontSize, obj.params.valueY);\n      };\n\n      this.bindEvent(\"raphael.anim.start\", onStart);\n    }\n\n    // animate gauge level, value & label\n    let rvl = obj.config.value;\n    if (obj.config.reverse) {\n      rvl = obj.config.max * 1 + obj.config.min * 1 - obj.config.value * 1;\n    }\n\n    obj.level.animate(\n      {\n        pki: [rvl, obj.config.differential],\n      },\n      obj.config.startAnimationTime,\n      obj.config.startAnimationType,\n      obj.config.onAnimationEnd\n    );\n\n    if (obj.config.pointer) {\n      obj.needle.animate(\n        {\n          ndl: [rvl],\n        },\n        obj.config.startAnimationTime,\n        obj.config.startAnimationType\n      );\n    }\n\n    obj.txtValue.animate(\n      {\n        \"fill-opacity\": obj.config.hideValue ? \"0\" : \"1\",\n      },\n      obj.config.startAnimationTime,\n      obj.config.startAnimationType\n    );\n    obj.txtLabel.animate(\n      {\n        \"fill-opacity\": \"1\",\n      },\n      obj.config.startAnimationTime,\n      obj.config.startAnimationType\n    );\n  };\n\n  /**\n   * Bind a function to a Raphael eve event\n   *\n   * @param {String} eventName Raphael event name\n   * @param {Function} func The function to call on that event\n   */\n  JustGage.prototype.bindEvent = function (eventName, func) {\n    // add the level id to the event\n    eventName += \".\" + this.level.id;\n\n    // check for existing bind events\n    if (this.events[eventName]) {\n      Raphael.eve.off(eventName, this.events[eventName]);\n    }\n\n    Raphael.eve.on(eventName, func);\n\n    this.events[eventName] = func;\n  };\n\n  /**\n   * Update Gauge values\n   *\n   * @param {Number} val The value\n   * @param {Number|String} max Max value\n   * @param {Number|String} min Min value\n   * @param {String} label The Label\n   */\n  JustGage.prototype.refresh = function (val, max, min, label) {\n    const obj = this;\n    let displayVal;\n\n    max = isNumber(max) ? max : null;\n    min = isNumber(min) ? min : null;\n    label = label || null;\n\n    // set label min\n    if (label !== null) {\n      obj.config.label = label;\n\n      obj.txtLabel.attr({\n        text: obj.config.label,\n      });\n      setDy(obj.txtLabel, obj.params.labelFontSize, obj.params.labelY);\n    }\n\n    // set new min\n    if (min !== null) {\n      obj.config.min = min;\n      // TODO: update customSectors\n\n      obj.txtMinimum = obj.config.min;\n      if (obj.config.minTxt) {\n        obj.txtMinimum = obj.config.minTxt;\n      } else if (obj.config.humanFriendly) {\n        obj.txtMinimum = humanFriendlyNumber(\n          obj.config.min,\n          obj.config.humanFriendlyDecimal\n        );\n      } else if (obj.config.formatNumber) {\n        obj.txtMinimum = formatNumber(obj.config.min);\n      }\n      if (!obj.config.reverse) {\n        obj.txtMin.attr({\n          text: obj.txtMinimum,\n        });\n        setDy(obj.txtMin, obj.params.minFontSize, obj.params.minY);\n      } else {\n        obj.txtMax.attr({\n          text: obj.txtMinimum,\n        });\n        setDy(obj.txtMax, obj.params.minFontSize, obj.params.minY);\n      }\n    }\n\n    // set new max\n    if (max !== null) {\n      obj.config.max = max;\n\n      obj.txtMaximum = obj.config.max;\n      if (obj.config.maxTxt) {\n        obj.txtMaximum = obj.config.maxTxt;\n      } else if (obj.config.humanFriendly) {\n        obj.txtMaximum = humanFriendlyNumber(\n          obj.config.max,\n          obj.config.humanFriendlyDecimal\n        );\n      } else if (obj.config.formatNumber) {\n        obj.txtMaximum = formatNumber(obj.config.max);\n      }\n      if (!obj.config.reverse) {\n        obj.txtMax.attr({\n          text: obj.txtMaximum,\n        });\n        setDy(obj.txtMax, obj.params.maxFontSize, obj.params.maxY);\n      } else {\n        obj.txtMin.attr({\n          text: obj.txtMaximum,\n        });\n        setDy(obj.txtMin, obj.params.maxFontSize, obj.params.maxY);\n      }\n    }\n\n    // overflow values\n    displayVal = val;\n    if (val * 1 > obj.config.max * 1) {\n      val = obj.config.max * 1;\n    }\n    if (val * 1 < obj.config.min * 1) {\n      val = obj.config.min * 1;\n    }\n\n    const color = getColor(\n      val,\n      (val - obj.config.min) / (obj.config.max - obj.config.min),\n      obj.config.levelColors,\n      obj.config.noGradient,\n      obj.config.customSectors\n    );\n\n    if (\n      obj.config.textRenderer &&\n      obj.config.textRenderer(displayVal) !== false\n    ) {\n      displayVal = obj.config.textRenderer(displayVal);\n    } else if (obj.config.humanFriendly) {\n      displayVal =\n        humanFriendlyNumber(displayVal, obj.config.humanFriendlyDecimal) +\n        obj.config.symbol;\n    } else if (obj.config.formatNumber) {\n      displayVal =\n        formatNumber((displayVal * 1).toFixed(obj.config.decimals)) +\n        obj.config.symbol;\n    } else if (obj.config.displayRemaining) {\n      displayVal =\n        ((obj.config.max - displayVal) * 1).toFixed(obj.config.decimals) +\n        obj.config.symbol;\n    } else {\n      displayVal =\n        (displayVal * 1).toFixed(obj.config.decimals) + obj.config.symbol;\n    }\n    obj.originalValue = displayVal;\n    obj.config.value = val * 1;\n\n    if (!obj.config.counter) {\n      obj.txtValue.attr({\n        text: displayVal,\n      });\n      setDy(obj.txtValue, obj.params.valueFontSize, obj.params.valueY);\n    }\n\n    let rvl = obj.config.value;\n    if (obj.config.reverse) {\n      rvl = obj.config.max * 1 + obj.config.min * 1 - obj.config.value * 1;\n    }\n\n    obj.level.animate(\n      {\n        pki: [rvl, obj.config.differential],\n        fill: color,\n      },\n      obj.config.refreshAnimationTime,\n      obj.config.refreshAnimationType,\n      obj.config.onAnimationEnd\n    );\n\n    if (obj.config.pointer) {\n      obj.needle.animate(\n        {\n          ndl: [rvl],\n        },\n        obj.config.refreshAnimationTime,\n        obj.config.refreshAnimationType\n      );\n    }\n  };\n\n  /**\n   * Update Gauge options\n   *\n   * @param options {String} option The target option name\n   * @param val {Number|String} val The value to be assigned to the option\n   *\n   * Alternative signature\n   * @param options {String|Object} options name and value\n   */\n  JustGage.prototype.update = function (options, val) {\n    const obj = this;\n\n    // options as an object of option/val values\n    if (options instanceof Object) {\n      for (const option in options) {\n        val = options[option];\n        updateProp(obj, option, val);\n      }\n\n      // options as single option/val\n    } else {\n      updateProp(obj, options, val);\n    }\n  };\n\n  /**\n   * Utility function to update properties to a JustGage object\n   *\n   * @param obj {JustGage Object} JustGage object to apply the property update to\n   * @param option {String} option name\n   * @param val {String} option value\n   */\n  function updateProp(obj, option, val) {\n    switch (option) {\n      case \"valueFontColor\":\n        if (!isHexColor(val)) {\n          console.log(\n            \"* justgage: the updated valueFontColor value is not a valid hex color\"\n          );\n          break;\n        }\n\n        obj.txtValue.attr({\n          fill: val,\n        });\n        break;\n\n      case \"labelFontColor\":\n        if (!isHexColor(val)) {\n          console.log(\n            \"* justgage: the updated labelFontColor value is not a valid hex color\"\n          );\n          break;\n        }\n\n        obj.txtMin.attr({\n          fill: val,\n        });\n        obj.txtMax.attr({\n          fill: val,\n        });\n        obj.txtLabel.attr({\n          fill: val,\n        });\n\n        break;\n\n      default:\n        console.log(\n          `* justgage: \"${option}\" is not a supported update setting`\n        );\n    }\n  }\n\n  /**\n   * Destroy the Gauge Object and unbind events\n   *\n   */\n  JustGage.prototype.destroy = function () {\n    if (this.node && this.node.parentNode) this.node.innerHTML = \"\";\n\n    for (const event in this.events) {\n      Raphael.eve.off(event, this.events[event]);\n    }\n\n    this.events = {};\n  };\n\n  /**\n   * Generate Shadow\n   *\n   * @param {Object} svg The Svg element Object\n   * @param {Object} defs The defs element Object\n   */\n  JustGage.prototype.generateShadow = function (svg, defs) {\n    const obj = this;\n    const sid = \"inner-shadow-\" + (obj.config.id || obj.config.classId);\n\n    // FILTER\n    const gaussFilter = document.createElementNS(svg, \"filter\");\n    gaussFilter.setAttribute(\"id\", sid);\n    defs.appendChild(gaussFilter);\n\n    // offset\n    const feOffset = document.createElementNS(svg, \"feOffset\");\n    feOffset.setAttribute(\"dx\", 0);\n    feOffset.setAttribute(\"dy\", obj.config.shadowVerticalOffset);\n    gaussFilter.appendChild(feOffset);\n\n    // blur\n    const feGaussianBlur = document.createElementNS(svg, \"feGaussianBlur\");\n    feGaussianBlur.setAttribute(\"result\", \"offset-blur\");\n    feGaussianBlur.setAttribute(\"stdDeviation\", obj.config.shadowSize);\n    gaussFilter.appendChild(feGaussianBlur);\n\n    // composite 1\n    const feComposite1 = document.createElementNS(svg, \"feComposite\");\n    feComposite1.setAttribute(\"operator\", \"out\");\n    feComposite1.setAttribute(\"in\", \"SourceGraphic\");\n    feComposite1.setAttribute(\"in2\", \"offset-blur\");\n    feComposite1.setAttribute(\"result\", \"inverse\");\n    gaussFilter.appendChild(feComposite1);\n\n    // flood\n    const feFlood = document.createElementNS(svg, \"feFlood\");\n    feFlood.setAttribute(\"flood-color\", \"black\");\n    feFlood.setAttribute(\"flood-opacity\", obj.config.shadowOpacity);\n    feFlood.setAttribute(\"result\", \"color\");\n    gaussFilter.appendChild(feFlood);\n\n    // composite 2\n    const feComposite2 = document.createElementNS(svg, \"feComposite\");\n    feComposite2.setAttribute(\"operator\", \"in\");\n    feComposite2.setAttribute(\"in\", \"color\");\n    feComposite2.setAttribute(\"in2\", \"inverse\");\n    feComposite2.setAttribute(\"result\", \"shadow\");\n    gaussFilter.appendChild(feComposite2);\n\n    // composite 3\n    const feComposite3 = document.createElementNS(svg, \"feComposite\");\n    feComposite3.setAttribute(\"operator\", \"over\");\n    feComposite3.setAttribute(\"in\", \"shadow\");\n    feComposite3.setAttribute(\"in2\", \"SourceGraphic\");\n    gaussFilter.appendChild(feComposite3);\n\n    // set shadow\n    if (obj.config.showInnerShadow) {\n      obj.canvas.canvas.childNodes[2].setAttribute(\n        \"filter\",\n        \"url(#\" + sid + \")\"\n      );\n      obj.canvas.canvas.childNodes[3].setAttribute(\n        \"filter\",\n        \"url(#\" + sid + \")\"\n      );\n    }\n  };\n\n  //\n  // tiny helper function to lookup value of a key from two hash tables\n  // if none found, return defaultvalue\n  //\n  // key: string\n  // tablea: object\n  // tableb: DOMStringMap|object\n  // defval: string|integer|float|null\n  // datatype: return datatype\n  // delimiter: delimiter to be used in conjunction with datatype formatting\n  //\n  function kvLookup(key, tablea, tableb, defval, datatype, delimiter) {\n    let val = defval;\n    let canConvert = false;\n    if (!isUndefined(key)) {\n      if (!isUndefined(tableb) && typeof tableb === \"object\" && key in tableb) {\n        val = tableb[key];\n        canConvert = true;\n      } else if (\n        !isUndefined(tablea) &&\n        typeof tablea === \"object\" &&\n        key in tablea\n      ) {\n        val = tablea[key];\n        canConvert = true;\n      } else {\n        val = defval;\n      }\n      if (canConvert === true) {\n        if (!isUndefined(datatype)) {\n          switch (datatype) {\n            case \"int\":\n              val = parseInt(val, 10);\n              break;\n            case \"float\":\n              val = parseFloat(val);\n              break;\n            default:\n              break;\n          }\n        }\n      }\n    }\n    return val;\n  }\n\n  function isUndefined(v) {\n    return v === null || v === undefined;\n  }\n\n  /** Get color for value */\n  function getColor(val, pct, col, noGradient, custSec) {\n    let percentage,\n      rval,\n      gval,\n      bval,\n      lower,\n      upper,\n      range,\n      rangePct,\n      pctLower,\n      pctUpper,\n      color;\n    const cust = custSec && custSec.ranges && custSec.ranges.length > 0;\n    noGradient = noGradient || cust;\n\n    if (cust) {\n      if (custSec.percents === true) val = pct * 100;\n      for (let i = 0; i < custSec.ranges.length; i++) {\n        if (val >= custSec.ranges[i].lo && val <= custSec.ranges[i].hi) {\n          return custSec.ranges[i].color;\n        }\n      }\n    }\n\n    const no = col.length;\n    if (no === 1) return col[0];\n    const inc = noGradient ? 1 / no : 1 / (no - 1);\n    const colors = [];\n    for (let i = 0; i < col.length; i++) {\n      percentage = noGradient ? inc * (i + 1) : inc * i;\n      rval = parseInt(cutHex(col[i]).substring(0, 2), 16);\n      gval = parseInt(cutHex(col[i]).substring(2, 4), 16);\n      bval = parseInt(cutHex(col[i]).substring(4, 6), 16);\n      colors[i] = {\n        pct: percentage,\n        color: {\n          r: rval,\n          g: gval,\n          b: bval,\n        },\n      };\n    }\n\n    if (pct === 0) {\n      return (\n        \"rgb(\" +\n        [colors[0].color.r, colors[0].color.g, colors[0].color.b].join(\",\") +\n        \")\"\n      );\n    }\n\n    for (let j = 0; j < colors.length; j++) {\n      if (pct <= colors[j].pct) {\n        if (noGradient) {\n          return (\n            \"rgb(\" +\n            [colors[j].color.r, colors[j].color.g, colors[j].color.b].join(\n              \",\"\n            ) +\n            \")\"\n          );\n        } else {\n          lower = colors[j - 1];\n          upper = colors[j];\n          range = upper.pct - lower.pct;\n          rangePct = (pct - lower.pct) / range;\n          pctLower = 1 - rangePct;\n          pctUpper = rangePct;\n          color = {\n            r: Math.floor(lower.color.r * pctLower + upper.color.r * pctUpper),\n            g: Math.floor(lower.color.g * pctLower + upper.color.g * pctUpper),\n            b: Math.floor(lower.color.b * pctLower + upper.color.b * pctUpper),\n          };\n          return \"rgb(\" + [color.r, color.g, color.b].join(\",\") + \")\";\n        }\n      }\n    }\n  }\n\n  /** Fix Raphael display:none tspan dy attribute bug */\n  function setDy(elem, fontSize, txtYpos) {\n    if ((!ie || ie > 9) && elem.node.firstChild.attributes.dy) {\n      elem.node.firstChild.attributes.dy.value = 0;\n    }\n  }\n\n  /**  Cut hex  */\n  function cutHex(str) {\n    return str.charAt(0) === \"#\" ? str.substring(1, 7) : str;\n  }\n\n  /**\n   * Validate if html hex color presentation\n   *\n   * @param val\n   * @returns {*|boolean}\n   */\n  function isHexColor(val) {\n    const regExp = /^#([0-9A-Fa-f]{3}){1,2}$/;\n    return typeof val === \"string\" && regExp.test(val);\n  }\n\n  /**  Human friendly number suffix - @robertsLando */\n  function humanFriendlyNumber(n, d) {\n    const d2 = Math.pow(10, d);\n    const s = \" KMGTPE\";\n    let i = 0;\n    const c = 1000;\n\n    while ((n >= c || n <= -c) && ++i < s.length) n = n / c;\n\n    i = i >= s.length ? s.length - 1 : i;\n\n    return Math.round(n * d2) / d2 + s[i];\n  }\n\n  /** Format numbers with commas - From: http://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript */\n  function formatNumber(x) {\n    const parts = x.toString().split(\".\");\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return parts.join(\".\");\n  }\n\n  /**  Get style  */\n  function getStyle(oElm, strCssRule) {\n    let strValue = \"\";\n    if (document.defaultView && document.defaultView.getComputedStyle) {\n      strValue = document.defaultView\n        .getComputedStyle(oElm, \"\")\n        .getPropertyValue(strCssRule);\n    } else if (oElm.currentStyle) {\n      strCssRule = strCssRule.replace(/-(\\w)/g, function (strMatch, p1) {\n        return p1.toUpperCase();\n      });\n      strValue = oElm.currentStyle[strCssRule];\n    }\n    return strValue;\n  }\n\n  /**  Create Element NS Ready  */\n  function onCreateElementNsReady(func) {\n    if (document.createElementNS !== undefined) {\n      func();\n    } else {\n      setTimeout(function () {\n        onCreateElementNsReady(func);\n      }, 100);\n    }\n  }\n\n  /**  Get IE version  */\n  // ----------------------------------------------------------\n  // A short snippet for detecting versions of IE in JavaScript\n  // without resorting to user-agent sniffing\n  // ----------------------------------------------------------\n  // If you're not in IE (or IE version is less than 5) then:\n  // ie === undefined\n  // If you're in IE (>=5) then you can determine which version:\n  // ie === 7; // IE7\n  // Thus, to detect IE:\n  // if (ie) {}\n  // And to detect the version:\n  // ie === 6 // IE6\n  // ie > 7 // IE8, IE9 ...\n  // ie < 9 // Anything less than IE9\n  // ----------------------------------------------------------\n  // UPDATE: Now using Live NodeList idea from @jdalton\n  const ie = (function () {\n    let v = 3;\n    const div = document.createElement(\"div\");\n    const all = div.getElementsByTagName(\"i\");\n\n    while (all[0]) {\n      div.innerHTML = \"<!--[if gt IE \" + ++v + \"]><i></i><![endif]-->\";\n    }\n    return v > 4 ? v : undefined;\n  })();\n\n  // extend target object with second object\n  function extend(out) {\n    out = out || {};\n\n    for (let i = 1; i < arguments.length; i++) {\n      if (!arguments[i]) {\n        continue;\n      }\n\n      for (const key in arguments[i]) {\n        if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n          out[key] = arguments[i][key];\n        }\n      }\n    }\n\n    return out;\n  }\n\n  function isNumber(n) {\n    return n !== null && n !== undefined && !isNaN(n);\n  }\n\n  /**\n   * Generate UUID\n   * @returns UUID\n   */\n  function uuid() {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(\n      /[xy]/g,\n      function (c) {\n        const r = (Math.random() * 16) | 0;\n        const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n      }\n    );\n  }\n\n  return JustGage;\n});\n", "// this file is to export the module\n\nmodule.exports = require(\"./justgage.js\");\n"],
  "mappings": "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",
  "names": ["Raphael", "min", "max", "dx", "dy", "require_justgage"]
}
