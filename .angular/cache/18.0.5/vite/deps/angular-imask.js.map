{
  "version": 3,
  "sources": ["../../../../../node_modules/angular-imask/fesm2022/angular-imask.mjs"],
  "sourcesContent": ["import IMask, { pipe } from 'imask';\nexport { default as IMask, PIPE_TYPE, pipe } from 'imask';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, inject, forwardRef, ElementRef, Renderer2, PLATFORM_ID, EventEmitter, Directive, Input, Output, Pipe, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, COMPOSITION_BUFFER_MODE } from '@angular/forms';\nclass DefaultImaskFactory {\n  create(el, opts) {\n    return IMask(el, opts);\n  }\n  static {\n    this.ɵfac = function DefaultImaskFactory_Factory(t) {\n      return new (t || DefaultImaskFactory)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DefaultImaskFactory,\n      factory: DefaultImaskFactory.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultImaskFactory, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nconst IMASK_FACTORY = new InjectionToken('IMASK_FACTORY', {\n  providedIn: 'root',\n  factory: () => inject(DefaultImaskFactory)\n});\nconst MASKEDINPUT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => IMaskDirective),\n  multi: true\n};\nconst DEFAULT_IMASK_ELEMENT = elementRef => elementRef.nativeElement;\nclass IMaskDirective {\n  constructor() {\n    this.onTouched = () => {};\n    this.onChange = () => {};\n    this._viewInitialized = false;\n    this._composing = false;\n    this._writing = false;\n    this._elementRef = inject(ElementRef);\n    this._renderer = inject(Renderer2);\n    this._factory = inject(IMASK_FACTORY);\n    this._platformId = inject(PLATFORM_ID);\n    this._compositionMode = inject(COMPOSITION_BUFFER_MODE, {\n      optional: true\n    }) ?? !this._isAndroid();\n    this.imaskElement = DEFAULT_IMASK_ELEMENT;\n    this.accept = new EventEmitter();\n    this.complete = new EventEmitter();\n  }\n  get element() {\n    return this.imaskElement(this._elementRef, this);\n  }\n  get maskValue() {\n    if (!this.maskRef) return this.element?.value || '';\n    if (this.unmask === 'typed') return this.maskRef.typedValue;\n    if (this.unmask) return this.maskRef.unmaskedValue;\n    return this.maskRef.value;\n  }\n  set maskValue(value) {\n    if (this.maskRef) {\n      if (this.unmask === 'typed') this.maskRef.typedValue = value;else if (this.unmask) this.maskRef.unmaskedValue = value;else this.maskRef.value = value;\n    } else {\n      this._renderer.setProperty(this.element, 'value', value);\n    }\n  }\n  ngAfterViewInit() {\n    if (this.imask) this.initMask();\n    this._viewInitialized = true;\n  }\n  ngOnChanges(changes) {\n    if (changes['elementRef'] && !this.imaskElement) this.imaskElement = DEFAULT_IMASK_ELEMENT;\n    if (!changes['imask'] || !this._viewInitialized) return;\n    if (this.imask) {\n      if (this.maskRef) this.maskRef.updateOptions(this.imask);else {\n        this.initMask();\n        this.onChange(this.maskValue);\n      }\n    } else {\n      this.destroyMask();\n    }\n  }\n  destroyMask() {\n    if (this.maskRef) {\n      this.maskRef.destroy();\n      delete this.maskRef;\n    }\n  }\n  ngOnDestroy() {\n    this.destroyMask();\n    this.accept.complete();\n    this.complete.complete();\n  }\n  beginWrite(value) {\n    this._writing = true;\n    this._writingValue = value;\n  }\n  endWrite() {\n    this._writing = false;\n    return this._writingValue;\n  }\n  writeValue(value) {\n    value = value == null && this.unmask !== 'typed' ? '' : value;\n    if (this.maskRef) {\n      this.beginWrite(value);\n      this.maskValue = value;\n      this.endWrite();\n    } else {\n      this._renderer.setProperty(this.element, 'value', value);\n      this._initialValue = value;\n    }\n  }\n  _onAccept() {\n    const value = this.maskValue;\n    // if value was not changed during writing don't fire events\n    // for details see https://github.com/uNmAnNeR/imaskjs/issues/136\n    if (this._writing && value === this.endWrite()) return;\n    this.onChange(value);\n    this.accept.emit(value);\n  }\n  _onComplete() {\n    this.complete.emit(this.maskValue);\n  }\n  initMask() {\n    this.maskRef = this._factory.create(this.element, this.imask).on('accept', this._onAccept.bind(this)).on('complete', this._onComplete.bind(this));\n    if (this._initialValue != null) this.writeValue(this._initialValue);\n    delete this._initialValue;\n  }\n  setDisabledState(isDisabled) {\n    this._renderer.setProperty(this.element, 'disabled', isDisabled);\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  _handleInput(value) {\n    // if mask is attached all input goes throw mask\n    if (this.maskRef) return;\n    if (!this._compositionMode || this._compositionMode && !this._composing) {\n      this.onChange(value);\n    }\n  }\n  _compositionStart() {\n    this._composing = true;\n  }\n  _compositionEnd(value) {\n    this._composing = false;\n    this._compositionMode && this._handleInput(value);\n  }\n  _isAndroid() {\n    return isPlatformBrowser(this._platformId) && /android (\\d+)/.test(navigator.userAgent.toLowerCase());\n  }\n  static {\n    this.ɵfac = function IMaskDirective_Factory(t) {\n      return new (t || IMaskDirective)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: IMaskDirective,\n      selectors: [[\"\", \"imask\", \"\"]],\n      hostBindings: function IMaskDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"input\", function IMaskDirective_input_HostBindingHandler($event) {\n            return ctx._handleInput($event.target.value);\n          })(\"blur\", function IMaskDirective_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          })(\"compositionstart\", function IMaskDirective_compositionstart_HostBindingHandler() {\n            return ctx._compositionStart();\n          })(\"compositionend\", function IMaskDirective_compositionend_HostBindingHandler($event) {\n            return ctx._compositionEnd($event.target.value);\n          });\n        }\n      },\n      inputs: {\n        imask: \"imask\",\n        unmask: \"unmask\",\n        imaskElement: \"imaskElement\"\n      },\n      outputs: {\n        accept: \"accept\",\n        complete: \"complete\"\n      },\n      exportAs: [\"imask\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([MASKEDINPUT_VALUE_ACCESSOR]), i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IMaskDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[imask]',\n      standalone: true,\n      exportAs: 'imask',\n      host: {\n        '(input)': '_handleInput($event.target.value)',\n        '(blur)': 'onTouched()',\n        '(compositionstart)': '_compositionStart()',\n        '(compositionend)': '_compositionEnd($event.target.value)'\n      },\n      providers: [MASKEDINPUT_VALUE_ACCESSOR]\n    }]\n  }], null, {\n    imask: [{\n      type: Input\n    }],\n    unmask: [{\n      type: Input\n    }],\n    imaskElement: [{\n      type: Input\n    }],\n    accept: [{\n      type: Output\n    }],\n    complete: [{\n      type: Output\n    }]\n  });\n})();\n\n/*\n * Transforms value through mask\n * Takes mask and optionally `from` and `to` pipe types.\n * Usage:\n *   value | imask:MASK_OR_MASKED:opt_from:opt_to\n * Example:\n *   {{ 2 | imask:mask }}\n*/\nclass IMaskPipe {\n  transform(...args) {\n    return pipe(...args);\n  }\n  static {\n    this.ɵfac = function IMaskPipe_Factory(t) {\n      return new (t || IMaskPipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"imask\",\n      type: IMaskPipe,\n      pure: true,\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IMaskPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'imask',\n      standalone: true\n    }]\n  }], null, null);\n})();\nclass IMaskModule {\n  static {\n    this.ɵfac = function IMaskModule_Factory(t) {\n      return new (t || IMaskModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: IMaskModule,\n      imports: [IMaskDirective, IMaskPipe],\n      exports: [IMaskDirective, IMaskPipe]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IMaskModule, [{\n    type: NgModule,\n    args: [{\n      imports: [IMaskDirective, IMaskPipe],\n      exports: [IMaskDirective, IMaskPipe]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_IMASK_ELEMENT, DefaultImaskFactory, IMASK_FACTORY, IMaskDirective, IMaskModule, IMaskPipe, MASKEDINPUT_VALUE_ACCESSOR };\n"],
  "mappings": "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",
  "names": []
}
